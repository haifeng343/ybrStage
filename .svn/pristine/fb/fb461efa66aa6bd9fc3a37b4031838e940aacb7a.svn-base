<template>
    <div>
        <div class="headerTop">
            <div class="headerTop_title">容器管理</div>
            <i class="el-icon-d-arrow-right"></i>
            <div class="headerTop_text">房间管理</div>
        </div>

        <!-- 主体内容 -->
        <el-card>
            <!-- 头部搜索条件 -->
            <div class="btnContent">
                <div class="btnContentTop">
                    <div class="start">
                        <div class="searchForm">
                            <el-input
                                class="searchFormInput"
                                placeholder="输入搜索条件"
                                v-model="keyword"
                                clearable
                                @clear="getData(1)"
                                @keydown.native.enter="getData(1)"
                            ></el-input>
                            <div class="searchFormBtn" @click="getData(1)">搜索</div>
                        </div>
                        <!-- <div class="content_btn">
                            <img src="../../assets/img/loading.png" alt />
                            <p>重置</p>
                        </div>-->
                    </div>
                    <div class="btnContentRight">
                        <div class="content_btn success" v-has="'add'" @click="add">
                            <img src="../../../assets/img/add1.png" alt />
                            <p>新增房间</p>
                        </div>
                        <!-- <div class="content_btn error">
                            <img src="../../assets/img/delete1.png" alt />
                            <p>删除</p>
                        </div> -->
                    </div>
                </div>
            </div>
            <el-table
                :data="tableData"
                border
                class="table"
                height="560"
                :header-cell-style="{background:'#fff',color:'#606266'}"
                :row-class-name="tableRowClassName"
                @selection-change="handleSelectionChange"
            >
                <el-table-column :resizable="false" type="selection" width="55"></el-table-column>
                <el-table-column :resizable="false" prop="id" fixed label="ID" width="55" align="center"></el-table-column>
                <el-table-column :resizable="false" prop="name" fixed label="名称" align="center" width="200"></el-table-column>
                <el-table-column :resizable="false" prop="no" fixed label="描述" align="center"></el-table-column>
                <el-table-column :resizable="false" prop="createtime" fixed label="创建日期" align="center" width="200">
                    <template slot-scope="scope">
                        <span>{{scope.row.createtime}}</span>
                    </template>
                </el-table-column>
                <el-table-column :resizable="false" fixed label="修改日期" align="center" width="200">
                    <template slot-scope="scope">
                        <span>{{scope.row.updatetime}}</span>
                    </template>
                </el-table-column>
                <el-table-column :resizable="false" label="操作" width="180" align="center" fixed="right">
                    <template slot-scope="scope">
                        <el-button
                            size="mini"
                            type="success"
                            icon="el-icon-edit"
                            v-has="'edit'"
                            @click="handleEdit(scope.$index, scope.row)"
                        ></el-button>
                        <el-button
                            size="mini"
                            type="danger"
                            icon="el-icon-delete"
                            v-has="'delete'"
                            @click="handleDelete(scope.row)"
                        ></el-button>
                    </template>
                </el-table-column>
            </el-table>

            <!-- 分页 -->
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="pageIndex"
                :page-sizes="[10, 20, 30, 40,50]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount"
            ></el-pagination>

            <!-- 添加用户 -->
            <el-dialog :close-on-click-modal="false"
                :title="addForm.id?'编辑房间:':'新建房间:'"
                :visible.sync="addDialogVisible"
                width="50%"
                @close="addDialogClosed"
            >
                <el-form :model="addForm" :rules="addFormRules" ref="addFormRef" label-width="70px">
                    <el-row>
                        <el-col :span="7">
                            <el-form-item label="名称:" prop="name">
                                <el-input type="text" v-model="addForm.name" placeholder="请输入房间名称"></el-input>
                            </el-form-item>
                        </el-col>
                    </el-row>
                    <el-row>
                        <el-col :span="24">
                            <el-form-item label="描述" prop="no">
                                <el-input
                                    type="textarea"
                                    :rows="5"
                                    placeholder="请输入描述"
                                    v-model="addForm.no"
                                ></el-input>
                            </el-form-item>
                        </el-col>
                    </el-row>
                </el-form>
                <span slot="footer" class="dialog-footer">
                    <el-button @click="addDialogClosed">取 消</el-button>
                    <el-button @click="addSubmitForm('addForm')">确 定</el-button>
                </span>
            </el-dialog>
        </el-card>
    </div>
</template>
<script>
import moment from 'moment';
export default {
    data() {
        return {
            keyword: '',
            value: '',
            tableData: [],
            addDialogVisible: false,
            addForm: {
                name: '', //用户
                no: '' //描述
            },
            addFormRules: {
                name: [{ required: true, trigger: 'blur', message: '请输入房间名称' }],
                no: [{ required: true, trigger: 'blur', message: '请输入描述' }]
            },
            pageIndex: 1, //页码数
            pageSize: 10, //条数
            totalCount: 0 //总条数
        };
    },
    mounted() {
        this.getData(1);
    },
    methods: {
        search() {},
        tableRowClassName({ row }) {
            if (row.state === '失败') {
                return 'warning-row';
            } else if (row.state === '成功') {
                return 'success-row';
            }
            return '';
        },
        handleSelectionChange(e) {
            console.log(e);
        },
        // 监听 pagesize 改变事件
        handleSizeChange(val) {
            this.pageSize = val;
            this.getData(this.pageIndex);
        },
        // 监听页码值改变的事件
        handleCurrentChange(val) {
            this.pageIndex = val;
            this.getData(val);
        },
        // 添加
        add() {
            this.addDialogVisible = true;
            this.addForm = {
                name: '', //用户
                no: '' //描述
            };
            // console.log(this.$refs.childRef.getData)//调用子组件的属性和方法
        },
        // 编辑
        handleEdit(index, item) {
            this.addForm = {
                id: item.id,
                name: item.name,
                no: item.no
            };
            this.addDialogVisible = true;
        },
        // 删除
        handleDelete(item) {
            this.$confirm('此操作将永久删除该房间, 是否继续?', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消'
            })
                .then(() => {
                    this.$http.post('/api/container/deletebyroom', { id: item.id }).then((res) => {
                        if (res.data.success) {
                            this.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                            this.getData(this.pageIndex);
                        } else {
                            this.$message.error(res.data.message);
                        }
                    });
                })
                .catch(() => {});
        },
        getData(pageIndex) {
            this.$http
                .post('/api/container/getlistbyroom', {
                    name: this.keyword,
                    pageIndex: pageIndex,
                    pageSize: this.pageSize,
                    fldSort: '',
                    fldName: ''
                })
                .then((res) => {
                    let tempArr = res.data.result.pageData;
                    tempArr.forEach((item) => {
                        item.createtime = moment(item.createtime).format('YYYY-MM-DD  HH:mm:ss');
                        item.updatetime = moment(item.updatetime).format('YYYY-MM-DD  HH:mm:ss');
                    });
                    this.tableData = tempArr;
                    this.totalCount = res.data.result.totalItemCount;
                    this.pageIndex = res.data.result.pageIndex;
                    this.pageSize = res.data.result.pageSize;
                });
        },
        // 提交校验
        addSubmitForm(formName) {
            this.$refs.addFormRef.validate((valid) => {
                if (valid) {
                    if (this.addForm.id) {
                        this.$http
                            .post('/api/container/savebyroom', {
                                id: this.addForm.id,
                                name: this.addForm.name,
                                no: this.addForm.no
                            })
                            .then((res) => {
                                if (res.data.success == true) {
                                    this.addDialogVisible = false;
                                    this.getData(this.pageIndex);
                                    this.$message.success(res.data.message);
                                } else {
                                    this.$message.error(res.data.message);
                                }
                            });
                    } else {
                        this.$http
                            .post('/api/container/savebyroom', {
                                name: this.addForm.name,
                                no: this.addForm.no
                            })
                            .then((res) => {
                                if (res.data.success == true) {
                                    this.addDialogVisible = false;
                                    this.getData(this.pageIndex);
                                    this.$message.success(res.data.message);
                                } else {
                                    this.$message.error(res.data.message);
                                }
                            });
                    }
                }
            });
        },
        // 关闭弹窗
        addDialogClosed() {
            this.$refs.addFormRef.resetFields();
            this.addDialogVisible = false;
        }
    }
};
</script>
<style lang="less" scoped>
.btnContentTop {
    border: none;
    box-shadow: none;
}
</style>