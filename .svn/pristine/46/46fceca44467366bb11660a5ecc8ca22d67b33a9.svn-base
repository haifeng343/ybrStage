<template>
    <div>
        <!-- 卡片视图 -->
        <div class="headerTop">
            <div class="headerTop_title">系统管理</div>
            <i class="el-icon-d-arrow-right"></i>
            <div class="headerTop_text">流程管理</div>
        </div>

        <el-card>
            <!-- 头部搜索条件 -->
            <div class="btnContent">
                <div class="btnContentTop">
                    <div class="start">
                        <div class="searchForm">
                            <el-input
                                class="searchFormInput"
                                placeholder="输入搜索条件"
                                v-model="keyword"
                                clearable
                                @clear="getData(1)"
                                @keydown.native.enter="getData(1)"
                            ></el-input>
                            <div class="searchFormBtn" @click="getData(1)">搜索</div>
                        </div>
                        <!-- <div class="content_btn">
                            <img src="../../assets/img/loading.png" alt />
                            <p>重置</p>
                        </div>-->
                    </div>
                    <div class="btnContentRight">
                        <div class="content_btn success" v-has="'add'" @click="add">
                            <img src="../../../assets/img/add1.png" alt />
                            <p>新增审批流程</p>
                        </div>
                    </div>
                </div>
            </div>

            <el-table
                :data="tableData"
                style="width: 100%;margin-bottom: 20px;"
                row-key="id"
                border
                class="table"
                height="560"
                :header-cell-style="{background:'#fff',color:'#606266'}"
                :row-class-name="tableRowClassName"
            >
                <el-table-column :resizable="false" prop="id" label="ID" width="50"></el-table-column>
                <el-table-column :resizable="false" prop="flowdef_name" label="审批流程名称" width="300"></el-table-column>
                <el-table-column :resizable="false" prop="flowdef_type" label="审批流程类型" width="300"></el-table-column>
                <el-table-column :resizable="false" prop="createtime" label="创建时间" width="300"></el-table-column>
                <el-table-column :resizable="false" label="操作">
                    <template slot-scope="scope">
                        <el-button
                            size="mini"
                            type="success"
                            icon="el-icon-edit"
                            v-has="'edit'"
                            @click="handleEdit( scope.row)"
                        ></el-button>
                        <el-tooltip content="配置流程节点" :enterable="false" placement="top">
                            <el-button
                                size="mini"
                                type="warning"
                                icon="el-icon-edit-outline"
                                v-has="'edit'"
                                @click="handleJie(scope.row)"
                            ></el-button>
                        </el-tooltip>
                        <el-button
                            size="mini"
                            type="danger"
                            icon="el-icon-delete"
                            v-has="'delete'"
                            @click="handleDelete(scope.row)"
                        ></el-button>
                    </template>
                </el-table-column>
            </el-table>
            <!-- 分页 -->
            <el-pagination
                @size-change="handleSizeChange"
                @current-change="handleCurrentChange"
                :current-page="pageIndex"
                :page-sizes="[10, 20, 30, 40,50]"
                :page-size="pageSize"
                layout="total, sizes, prev, pager, next, jumper"
                :total="totalCount"
            ></el-pagination>
        </el-card>
        <!-- 添加 -->
        <el-dialog :close-on-click-modal="false"
            :title="addForm.id?'编辑审批流程':'新建审批流程'"
            :visible.sync="addDialogVisible"
            width="40%"
            @close="addDialogClosed"
        >
            <el-form :model="addForm" :rules="addFormRules" ref="addFormRef" label-width="110px">
                <el-form-item label="审批流程值" prop="flowdef_key">
                    <el-input v-model="addForm.flowdef_key" placeholder="请输入审批流程值"></el-input>
                </el-form-item>
                <el-form-item label="审批流程名称" prop="flowdef_name">
                    <el-input v-model="addForm.flowdef_name" placeholder="请输入审批流程名称"></el-input>
                </el-form-item>
                <el-form-item label="审批流程类型" prop="flowdef_typeid">
                    <el-select v-model="addForm.flowdef_typeid" placeholder="请选择审批流程类型">
                        <el-option
                            v-for="(item,index) in keyList"
                            :key="index"
                            :value="item.key"
                            :label="item.name"
                        ></el-option>
                    </el-select>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button @click="addDialogClosed">取 消</el-button>
                <el-button type="primary" @click="addSubmitForm('addForm')">确 定</el-button>
            </span>
        </el-dialog>

        <!-- 配置流程节点 -->
        <el-dialog :close-on-click-modal="false"
            title="配置流程节点"
            :visible.sync="addDialogVisible1"
            width="40%"
            @close="addDialogClosed1"
        >
            <el-form :model="addForm1" :rules="addFormRules" ref="addFormRef" label-width="110px">
                <el-form-item label="审批流程值" prop="flowdef_key">
                    <el-input v-model="addForm1.flowdef_key" placeholder="请输入审批流程值"></el-input>
                </el-form-item>
                <el-form-item label="审批流程名称" prop="flowdef_name">
                    <el-input v-model="addForm1.flowdef_name" placeholder="请输入审批流程名称"></el-input>
                </el-form-item>
                <el-form-item label="审批流程类型" prop="flowdef_typeid">
                    <el-select v-model="addForm1.flowdef_typeid" placeholder="请选择审批流程类型">
                        <el-option
                            v-for="(item,index) in keyList"
                            :key="index"
                            :value="item.key"
                            :label="item.name"
                        ></el-option>
                    </el-select>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button @click="addDialogClosed1">取 消</el-button>
                <el-button type="primary" @click="addSubmitForm1('addForm')">确 定</el-button>
            </span>
        </el-dialog>
    </div>
</template>
<script>
import moment from 'moment';
export default {
    data() {
        return {
            keyword: '', //关键字
            pageIndex: 1,
            pageSize: 10,
            totalCount: 0,
            //表格数据
            tableData: [],
            addDialogVisible: false,
            addForm: {
                id: '', //Id
                flowdef_key: '', //审批流程值
                flowdef_name: '', //审批流程名称
                flowdef_typeid: '', //审批流程类型
                flowdef_type: '' //审批流程类型
            },
            addFormRules: {
                flowdef_key: [{ required: true, trigger: 'blur', message: '请输入审批流程值' }],
                flowdef_name: [{ required: true, trigger: 'blur', message: '请输入审批流程名称' }],
                flowdef_typeid: [{ required: true, trigger: 'blur', message: '请选择审批流程类型' }]
            },
            keyList: [], //审批流程Key

            addDialogVisible1: false, //配置流程节点
            addForm1: {}
        };
    },
    mounted() {
        this.getData(1);
        this.getSelectKey();
    },
    methods: {
        // 审批流程key
        getSelectKey() {
            this.$http.post('/api/flow/getselectflowdeftype', {}).then((res) => {
                let tempArr = res.data.result;
                tempArr.shift(0, 1);
                this.keyList = tempArr;
            });
        },
        tableRowClassName({ row }) {
            if (row.state === '失败') {
                return 'warning-row';
            } else if (row.state === '成功') {
                return 'success-row';
            }
            return '';
        },
        // 节点发生变化
        changeTree() {
            let res = this.$refs.tree.getCheckedNodes();
            let arr = [];
            res.forEach((item) => {
                arr.push(item.num);
            });
            console.log(arr);
            this.addForm.checkmenus = arr;
        },
        // 配置流程节点
        handleJie(item) {
            console.log(item);
            this.addDialogVisible1 = true;
            this.$router.push({
                name: 'configuration',
                query: {
                    flowdefid: item.id
                }
            });
        },
        // 编辑
        handleEdit(item) {
            this.addForm = {
                id: item.id,
                flowdef_key: item.flowdef_key, //审批流程值
                flowdef_name: item.flowdef_name, //审批流程名称
                flowdef_typeid: item.flowdef_typeid, //审批流程类型
                flowdef_type: item.flowdef_type //审批流程类型
            };
            this.addDialogVisible = true;
        },
        // 监听 pagesize 改变事件
        handleSizeChange(val) {
            this.pageSize = val;
            this.getData(this.pageIndex);
        },
        // 监听页码值改变的事件
        handleCurrentChange(val) {
            this.pageIndex = val;
            this.getData(val);
        },
        // 删除
        handleDelete(item) {
            this.$confirm('此操作将永久删除该流程, 是否继续?', '提示', {
                confirmButtonText: '确定',
                cancelButtonText: '取消'
            })
                .then(() => {
                    this.$http.post('/api/flow/delete', { id: item.id }).then((res) => {
                        if (res.data.success) {
                            this.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                            this.getData(this.pageIndex);
                        } else {
                            this.$message.error(res.data.message);
                        }
                    });
                })
                .catch(() => {});
        },
        // 提交
        addSubmitForm() {
            this.$refs.addFormRef.validate((valid) => {
                if (valid) {
                    let tempArr = this.keyList;
                    tempArr.forEach((item) => {
                        if (item.key == this.addForm.flowdef_typeid) {
                            this.addForm.flowdef_type = item.name;
                        }
                    });
                    if (this.addForm.id) {
                        this.$http
                            .post('/api/flow/save', {
                                id: this.addForm.id,
                                flowdef_key: this.addForm.flowdef_key, //审批流程值
                                flowdef_name: this.addForm.flowdef_name, //审批流程名称
                                flowdef_typeid: this.addForm.flowdef_typeid, //审批流程类型
                                flowdef_type: this.addForm.flowdef_type //审批流程
                            })
                            .then((res) => {
                                if (res.data.success) {
                                    this.$message.success(res.data.message);
                                    this.getData(this.pageIndex);
                                } else {
                                    this.$message.error(res.data.message);
                                }
                            });
                    } else {
                        this.$http
                            .post('/api/flow/save', {
                                flowdef_key: this.addForm.flowdef_key, //审批流程值
                                flowdef_name: this.addForm.flowdef_name, //审批流程名称
                                flowdef_typeid: this.addForm.flowdef_typeid, //审批流程类型
                                flowdef_type: this.addForm.flowdef_type //审批流程
                            })
                            .then((res) => {
                                if (res.data.success) {
                                    this.$message.success(res.data.message);
                                    this.getData(this.pageIndex);
                                } else {
                                    this.$message.error(res.data.message);
                                }
                            });
                    }
                    this.addDialogVisible = false;
                } else {
                    console.log('error submit!!');
                    return false;
                }
            });
        },
        // 数据
        getData(pageIndex) {
            this.$http
                .post('/api/flow/getlist', {
                    flowdef_name: this.keyword,
                    pageIndex: pageIndex,
                    pageSize: this.pageSize,
                    fldSort: '',
                    fldName: ''
                })
                .then((res) => {
                    let tempArr = res.data.result.pageData;
                    tempArr.forEach((item) => {
                        item.createtime = moment(item.createtime).format('YYYY-MM-DD');
                    });
                    this.tableData = tempArr;
                    this.totalCount = res.data.result.totalItemCount;
                    this.pageIndex = res.data.result.pageIndex;
                    this.pageSize = res.data.result.pageSize;
                });
        },
        // 新增
        add() {
            this.addForm = {
                id: '', //Id
                flowdef_key: '', //审批流程值
                flowdef_name: '', //审批流程名称
                flowdef_typeid: '', //审批流程类型
                flowdef_type: '' //审批流程类型
            };
            this.addDialogVisible = true;
        },
        // 关闭弹窗
        addDialogClosed() {
            this.addForm = {
                id: '', //Id
                flowdef_key: '', //审批流程值
                flowdef_name: '', //审批流程名称
                flowdef_typeid: '', //审批流程类型
                flowdef_type: '' //审批流程类型
            };
            this.$refs.addFormRef.resetFields();
            this.addDialogVisible = false;
        },
        // 关闭弹窗
        addDialogClosed1() {
            this.addForm = {
                id: '', //Id
                flowdef_key: '', //审批流程值
                flowdef_name: '', //审批流程名称
                flowdef_typeid: '', //审批流程类型
                flowdef_type: '' //审批流程类型
            };
            this.$refs.addFormRef.resetFields();
            this.addDialogVisible1 = false;
        }
    }
};
</script>
<style scoped>
.el-select {
    width: 100%;
}
</style>